version: v1.0
name: Test MyApp
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Test
    task:
      env_vars:
        - name: DATABASE_URL
          value: 'postgresql://postgres:@0.0.0.0:5432/myapp_test'
        - name: RAILS_ENV
          value: test
      jobs:
        - name: Test
          commands:
            - checkout
            - '#sem-service start postgres 11'
            - '#sem-version ruby 2.7'
            - '#cd drkiq'
            - '#cache restore'
            - >-
              #cache restore gems-$SEMAPHORE_GIT_BRANCH-revision-$(checksum
              Gemfile.lock)
            - '#bundle install --path vendor/bundle'
            - '#cache store'
            - >-
              #cache store gems-$SEMAPHORE_GIT_BRANCH-revision-$(checksum
              Gemfile.lock) vendor/bundle
            - '#bundle exec rake db:setup'
            - '#bundle exec rails test'
  - name: Docker Build
    task:
      secrets:
        - name: dockerhub
      jobs:
        - name: Build drkiq
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerizing-ruby-drkiq:latest || true'
            - >-
              docker build -t $DOCKER_USERNAME/dockerizing-ruby-drkiq:latest
              --cache-from=$DOCKER_USERNAME/dockerizing-ruby-drkiq:latest
              --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) -f
              Dockerfile.production .
            - 'docker push $DOCKER_USERNAME/dockerizing-ruby-drkiq:latest'
        - name: Build nginx
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerizing-ruby-nginx:latest || true'
            - >-
              docker build -t $DOCKER_USERNAME/dockerizing-ruby-nginx:latest
              --cache-from=$DOCKER_USERNAME/dockerizing-ruby-nginx:latest -f
              Dockerfile.nginx .
            - 'docker push $DOCKER_USERNAME/dockerizing-ruby-nginx:latest'
      prologue:
        commands:
          - checkout
          - >-
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}"
            --password-stdin
  - name: Tests
    task:
      secrets:
        - name: dockerhub
      prologue:
        commands:
          - 'checkout '
          - cp env-example .env
          - cat docker-compose.test.yml | envsubst | tee docker-compose.yml
          - >-
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}"
            --password-stdin
          - 'docker pull $DOCKER_USERNAME/dockerizing-ruby-drkiq:latest || true'
          - docker volume create --name drkiq-postgres
          - docker volume create --name drkiq-redis
          - docker-compose up -d
          - sleep 20
          - 'docker-compose run --user "$(id -u):$(id -g)" drkiq rake db:reset'
          - 'docker-compose run --user "$(id -u):$(id -g)" drkiq rake db:migrate'
      jobs:
        - name: Rail Test
          commands:
            - >-
              docker-compose -f docker-compose.yml run --user "$(id -u):$(id
              -g)" drkiq rails test
